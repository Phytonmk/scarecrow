module.exports = (app) => {
  app.tg = {};
  for (let method of methodsList) {
    app.tg[method] = (...args) => {
      if (typeof args[0] === 'number' && typeof app.requests[args[0]] !== 'undefined') {
        console.log(`Response time: ${new Date().getTime() - app.requests[args[0]]}ms`);
        delete app.requests[args[0]];
      }
      return app.tgApi[method](args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]);
    }
  }
}

const methodsList = 
['startPolling',
'initPolling',
'stopPolling',
'isPolling',
'openWebHook',
'closeWebHook',
'hasOpenWebHook',
'getMe',
'setWebHook',
'deleteWebHook',
'getWebHookInfo',
'getUpdates',
'processUpdate',
'sendMessage',
'answerInlineQuery',
'forwardMessage',
'sendPhoto',
'sendAudio',
'sendDocument',
'sendSticker',
'sendVideo',
'sendVideoNote',
'sendVoice',
'sendChatAction',
'kickChatMember',
'unbanChatMember',
'restrictChatMember',
'promoteChatMember',
'exportChatInviteLink',
'setChatPhoto',
'deleteChatPhoto',
'setChatTitle',
'setChatDescription',
'pinChatMessage',
'unpinChatMessage',
'answerCallbackQuery',
'editMessageText',
'editMessageCaption',
'editMessageReplyMarkup',
'getUserProfilePhotos',
'sendLocation',
'editMessageLiveLocation',
'stopMessageLiveLocation',
'sendVenue',
'sendContact',
'getFile',
'getFileLink',
'getFileStream',
'downloadFile',
'onText',
'removeTextListener',
'onReplyToMessage',
'removeReplyListener',
'getChat',
'getChatAdministrators',
'getChatMembersCount',
'getChatMember',
'leaveChat',
'setChatStickerSet',
'deleteChatStickerSet',
'sendGame',
'setGameScore',
'getGameHighScores',
'deleteMessage',
'sendInvoice',
'answerShippingQuery',
'answerPreCheckoutQuery',
'getStickerSet',
'uploadStickerFile',
'createNewStickerSet',
'addStickerToSet',
'setStickerPositionInSet',
'deleteStickerFromSet',
'sendMediaGroup'];